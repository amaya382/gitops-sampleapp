name: gitops

on:
  push:
    branches:
    - master

env:
  GITHUB_USER: amaya382 # 【要設定】GitHubのユーザ名
  GITHUB_REPO_APP: gitops-sampleapp # 【要設定】GitHub上のアプリ用リポジトリ名
  GITHUB_REPO_MANIFEST: gitops-manifest # 【要設定】GitHub上のマニフェスト用リポジトリ名
  DOCKERHUB_USER: amaya382 # 【要設定】DockerHubのユーザ名
  DOCKERHUB_REPO: gitops-sampleapp # 【要設定】DockerHub上のリポジトリ名

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO }}
        tags: type=sha,prefix=,format=long
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        tags: ${{ steps.meta.outputs.tags }}
        push: true

  deploy_request:
    runs-on: ubuntu-latest
    needs: docker
    steps:
    - name: Deploy request
      shell: bash
      run: |
        # GitHub CLIのダウンロード
        curl -sSL https://github.com/cli/cli/releases/download/v1.11.0/gh_1.11.0_linux_amd64.tar.gz | tar xz
        DOCKER_IMAGE="${DOCKERHUB_USER}/${DOCKERHUB_REPO}"

        # Gitのセットアップ
        git config --global user.name dummy
        git config --global user.email dummy@example.com

        # マニフェストリポジトリをクローン
        git clone -b dev "https://github.com/${GITHUB_USER}/${GITHUB_REPO_MANIFEST}.git" manifest
        cd manifest

        # Dockerイメージタグの更新
        PREV_SHA=$(grep -oP "(?<=image: ${DOCKER_IMAGE}:).+$" 'manifest/sampleapp/base/deployment.yaml')
        sed -i -e "s!image: ${DOCKER_IMAGE}:.\+\$!image: ${DOCKER_IMAGE}:${GITHUB_SHA}!" 'manifest/sampleapp/base/deployment.yaml'

        # プルリクエストの作成
        BRANCH_NAME="depreq/${DOCKER_IMAGE}/${GITHUB_SHA}"
        PR_TITLE="[DEPLOY REQUEST] ${DOCKER_IMAGE} の更新"
        PR_BODY="アプリ差分: [${PREV_SHA}...${GITHUB_SHA}](https://github.com/${GITHUB_USER}/${GITHUB_REPO_APP}/compare/${PREV_SHA}...${GITHUB_SHA})"
        git checkout -b "${BRANCH_NAME}"
        git add .
        git commit -m "${DOCKER_IMAGE}:${GITHUB_SHA} (https://github.com/${GITHUB_USER}/${GITHUB_REPO_APP}/tree/${GITHUB_SHA})"
        git push "https://${GITHUB_USER}:${{ secrets.GHP_TOKEN }}@github.com/${GITHUB_USER}/${GITHUB_REPO_MANIFEST}" "${BRANCH_NAME}"
        GITHUB_TOKEN=${{ secrets.GHP_TOKEN }} ../gh_1.11.0_linux_amd64/bin/gh pr create -B dev -H "${BRANCH_NAME}" -t "${PR_TITLE}" -b "${PR_BODY}"
